version: '3'
services:
    workspace:
        container_name: workspace
        build:
            context: ./docker/workspace
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                WWWUSER: '${WWWUSER}'
        image: dianmob/workspace
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
        volumes:
            - '${WORKSPACE}:/var/www/html'
        tty: true
    php:
        container_name: php
        build:
            context: ./docker/php/7.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: dianmob/php
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '8001:8001'
            - '8002:8002'
            - '8003:8003'
            - '8004:8004'
            - '8005:8005'
            - '8006:8006'
            - '8007:8007'
            - '8008:8008'
        environment:
            WWWUSER: '${WWWUSER}'
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '${WORKSPACE}:/var/www/html'
            - './docker/php/7.2/supervisord.d:/etc/supervisor/conf.d/supervisord.d'
    mysql:
        container_name: mysql
        image: 'mysql/mysql-server:8.0'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - './mysql:/var/lib/mysql'
            - './docker/mysql/8.0/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
            - './docker/mysql/8.0/my.cnf:/etc/my.cnf'
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
    openresty:
        container_name: openresty
        image: 'openresty/openresty:1.19.3.1-alpine'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '80:80'
        volumes:
            - './docker/openresty/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf'
            - './docker/openresty/logs:/usr/local/openresty/nginx/logs'
            - './docker/openresty/html:/usr/local/openresty/nginx/html'
            - './docker/openresty/cert:/usr/local/openresty/nginx/cert'
            - './docker/openresty/nginx/lua:/usr/local/openresty/nginx/lua'
            - './docker/openresty/conf.d:/etc/nginx/conf.d'
            - './docker/openresty/run:/var/run/openresty'
    redis:
        container_name: redis
        image: 'redis:alpine'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - './redis:/data'
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
